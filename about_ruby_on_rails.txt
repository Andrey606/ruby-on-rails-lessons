RAILS 6

rails commands 

# create new
rails new <project_name>

# create new с версией рельсов
rails _5.2.4.1_ new test_app_5


# controller generator
rails generate controller <name>

# CRUD generator (controller view model route)
rails generate scaffold Article title:string description:text

# CRUD generator (model test)
rails generate model user

# check routes 
rails routes --expanded
rails routes --expanded | grep edit

# migration file generator
rails generate migration create_articles
rails db:migrate
rails db:rollback

# rails console
rails console

# db is conected?
<db_name>.all

# clean irb
ctrl+l

# create new column in db
<ModelName>.create(title: "qwe", description: "sds")

# read column with id
<ModelName>.find(2)
<ModelName>.first
<ModelName>.last
<ModelName>.all

User.find(1) # returns the user
User.find_by_id(1) # returns the user
User.where(id: 1).first # returns the user
2) if id=2 dont exsist
User.find(2) # raises an exception
User.find_by_id(2) # nil
User.where(id: 2).first # nil
User.find_by(id: 1)

# (edit)save into db
<variable> = <ModelName>.find(2)
<variable>.title = "edited title"
<variable>.save

# delete row in db
<variable> = <ModelName>.last
<variable>.destroy

# reload irb (needs after modifiing a model)
reload!

# check db errors
article.errors
article.errors.full_messages

# to run debug
write 'byebug' into the code and then type 'continue' to continue

# if i have any changes in gem file (before production)
bundle install --without production

# add bootstarap 4.4 into rails6
1) yarn add bootstrap@4.4.1 jquery popper.js
2) add "*= require bootstrap" into application.css
3) add: 
const webpack = require('webpack')

environment.plugins.append("Provide", new webpack.ProvidePlugin({
  $: 'jquery',
  jQuery: 'jquery',
  Popper: ['popper.js', 'default']
}))
into environment.js

4) add 'import "bootstrap"' into aplication.js

5) app/helper - используется чтобы можно было добавлять вспомагательные функции для использования во view

# display info messages
flash[:notice] = "Article was updated succesfuly."

# если в таблице значение bool, то можно так проверять
User.admin?

# а также можно менять значение поля таблици
user = User.first
user.toggle!(:admin)

# Permisiion table
1) needs Permisiion table - for system like CRM
2) have string field in table user
3) have bool field in user table

#delete all items in table
User.delete.all